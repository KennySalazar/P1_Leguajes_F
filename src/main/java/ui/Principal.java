/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import Backend.AnalizadorLexico;
import Backend.Token;
import Backend.Token.Tipo;
import Backend.analizador.PalabrasReservadas;
import GeneracionGrafics.GenerateGrafic;
import java.awt.Color;
import static java.awt.Color.black;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.AttributeSet;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Kenny
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonGenerarGrafico = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        botonCargaDatos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        entrada = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        entrada1 = new javax.swing.JTextPane();
        botonAnalizarEntrada = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salidaErrores = new javax.swing.JTextArea();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaTokens = new javax.swing.JTable();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        comboIdS = new javax.swing.JComboBox<>();
        label = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboClaves = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboSMatems = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        comboCadenas = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        comboNumeros = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comboBooleanas = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        comboLogicos = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        comboComentarios = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        comboOtros1 = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Carga del Archivo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Black", 2, 12), new java.awt.Color(204, 0, 0))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Entrada del texto");

        botonCargaDatos.setBackground(new java.awt.Color(255, 102, 0));
        botonCargaDatos.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        botonCargaDatos.setText("Cargar Datos");
        botonCargaDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargaDatosActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jScrollPane3.setViewportView(entrada);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jLabel2.setBackground(new java.awt.Color(255, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Salida de texto con colores");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        entrada1.setEditable(false);
        entrada1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane5.setViewportView(entrada1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addComponent(botonCargaDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(85, 85, 85))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCargaDatos)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        botonAnalizarEntrada.setBackground(new java.awt.Color(204, 255, 51));
        botonAnalizarEntrada.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        botonAnalizarEntrada.setText("Analizar Entrada");
        botonAnalizarEntrada.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        botonAnalizarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnalizarEntradaActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Errores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 2, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Segoe UI Black", 2, 14)); // NOI18N

        salidaErrores.setEditable(false);
        salidaErrores.setColumns(20);
        salidaErrores.setRows(5);
        jScrollPane1.setViewportView(salidaErrores);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(botonAnalizarEntrada, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 811, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(317, 317, 317)
                .addComponent(botonAnalizarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonAnalizarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        botonGenerarGrafico.addTab("PÁGINA PRINCIPAL", jDesktopPane1);

        tablaTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Token", "Patron", "Lexema", "Linea", "Columna"
            }
        ));
        jScrollPane4.setViewportView(tablaTokens);

        jDesktopPane2.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addContainerGap())
        );

        botonGenerarGrafico.addTab("REPORTES", jDesktopPane2);

        jDesktopPane3.setBackground(new java.awt.Color(255, 153, 0));

        comboIdS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboIdSMouseClicked(evt);
            }
        });
        comboIdS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboIdSActionPerformed(evt);
            }
        });

        jLabel3.setText("Identificadores");

        comboClaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClavesActionPerformed(evt);
            }
        });

        jLabel4.setText("Palabras Clave");

        comboSMatems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSMatemsActionPerformed(evt);
            }
        });

        jLabel5.setText("Simbolos Matematicos");

        comboCadenas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCadenasActionPerformed(evt);
            }
        });

        jLabel6.setText("Cadenas");

        comboNumeros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNumerosActionPerformed(evt);
            }
        });

        jLabel7.setText("Numeros");

        jLabel8.setText("Otros");

        jLabel9.setText("Logicos");

        comboLogicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboLogicosMouseClicked(evt);
            }
        });
        comboLogicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLogicosActionPerformed(evt);
            }
        });

        jLabel10.setText("Comentarios");

        comboComentarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboComentariosActionPerformed(evt);
            }
        });

        jLabel11.setText("Booleanas");

        comboOtros1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOtros1ActionPerformed(evt);
            }
        });

        jDesktopPane3.setLayer(comboIdS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboClaves, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboSMatems, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboCadenas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboNumeros, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboBooleanas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboLogicos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboComentarios, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(comboOtros1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboCadenas, 0, 184, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(comboLogicos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboIdS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboNumeros, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboComentarios, 0, 147, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBooleanas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboOtros1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane3Layout.createSequentialGroup()
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboClaves, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboSMatems, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(125, Short.MAX_VALUE))
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboIdS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboClaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSMatems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCadenas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboNumeros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboOtros1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboLogicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboComentarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBooleanas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        botonGenerarGrafico.addTab("GENERAR GRÁFICO", jDesktopPane3);

        jMenu1.setText("Ayuda");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acerca de");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(botonGenerarGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(botonGenerarGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        mostrarAyuda();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void botonCargaDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargaDatosActionPerformed
        // TODO add your handling code here:
        leerArchivo();

    }//GEN-LAST:event_botonCargaDatosActionPerformed

    private void botonAnalizarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnalizarEntradaActionPerformed
        
        entrada1.setText(entrada.getText());
        salidaErrores.setText(" ");
        limpiarItems();
        leerErrores();

        cargarItems();

        try {
            combiarColor();
        } catch (BadLocationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_botonAnalizarEntradaActionPerformed

    private void limpiarItems() {
        try {

            this.comboClaves.removeAllItems();

        } catch (NullPointerException e) {

        }
        try {
            this.comboIdS.removeAllItems();
        } catch (NullPointerException e) {
        }
        try {
            this.comboSMatems.removeAllItems();
        } catch (NullPointerException e) {
        }
        try {
            this.comboCadenas.removeAllItems();
        } catch (NullPointerException e) {
        }
        try {
            this.comboNumeros.removeAllItems();
        } catch (NullPointerException e) {
        }
        try {
            this.comboOtros1.removeAllItems();
        } catch (NullPointerException e) {
        }
        try {
            this.comboLogicos.removeAllItems();
        } catch (NullPointerException e) {
        }
        try {
            this.comboComentarios.removeAllItems();
        } catch (NullPointerException e) {
        }
        try {
            this.comboBooleanas.removeAllItems();
        } catch (NullPointerException e) {
        }

    }


    private void comboIdSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboIdSMouseClicked

    }//GEN-LAST:event_comboIdSMouseClicked

    private void comboIdSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboIdSActionPerformed
        generarGrafico(this.comboIdS);
    }//GEN-LAST:event_comboIdSActionPerformed

    private void comboClavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClavesActionPerformed
        // TODO add your handling code here:
        generarGrafico(this.comboClaves);
    }//GEN-LAST:event_comboClavesActionPerformed

    private void comboLogicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboLogicosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_comboLogicosMouseClicked

    private void comboLogicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLogicosActionPerformed
        // TODO add your handling code here:
        generarGrafico(this.comboLogicos);
    }//GEN-LAST:event_comboLogicosActionPerformed

    private void comboComentariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboComentariosActionPerformed
        // TODO add your handling code here:
        generarGrafico(this.comboComentarios);
    }//GEN-LAST:event_comboComentariosActionPerformed

    private void comboSMatemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSMatemsActionPerformed
        // TODO add your handling code here:
        generarGrafico(this.comboSMatems);
    }//GEN-LAST:event_comboSMatemsActionPerformed

    private void comboCadenasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCadenasActionPerformed
        // TODO add your handling code here:
        generarGrafico(this.comboCadenas);
    }//GEN-LAST:event_comboCadenasActionPerformed

    private void comboNumerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNumerosActionPerformed
        // TODO add your handling code here:
        generarGrafico(this.comboNumeros);
    }//GEN-LAST:event_comboNumerosActionPerformed

    private void comboOtros1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOtros1ActionPerformed
        // TODO add your handling code here:
        generarGrafico(this.comboOtros1);
    }//GEN-LAST:event_comboOtros1ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        acercaDe();
    }//GEN-LAST:event_jMenu2MouseClicked
    public void generarGrafico(JComboBox combo) {
        GenerateGrafic gg = new GenerateGrafic();
        gg.generarGrafico(combo.getSelectedItem().toString(), this.label);
    }

    private void cargarItems() {
        AnalizadorLexico analizadorlexico = new AnalizadorLexico(entrada.getText());
        List<Token> tokens = analizadorlexico.analizarCodigoFuente();
        for (Token token : tokens) {
            switch (token.getTipo()) {
                case IDENTIFICADOR:
                    this.comboIdS.addItem(token.getLexema());
                    break;
                case ERROR:
                    break;
                case ARITMETICO_SUMA:
                case ARITMETICO_RESTA:
                case ARITMETICO_EXPONENTE:
                case ARITMETICO_DIVISION:
                case ARITMETICO_MODULO:
                case ARITMETICO_MULTIPLICACION:
                case COMPARACION_IGUAL:
                case COMPARACION_DIFERENTE:
                case COMPARACION_MAYOR_QUE:
                case COMPARACION_MENOR_QUE:
                case COMPARACION_MAYOR_O_IGUAL_QUE:
                case COMPARACION_MENOR_O_IGUAL_QUE:
                case ASIGNACION_IGUAL:
                case ASIGNACION_MULTIPLICACION:
                case ASIGNACION:
                    this.comboSMatems.addItem(token.getLexema());
                    break;
                case CONSTANTE_ENTERA:
                case CONSTANTE_DECIMAL:
                    this.comboNumeros.addItem(token.getLexema());
                    break;
                case PARENTESI_APERTURA:
                case PARENTESI_CIERRE:
                case LLAVE_APERTURA:
                case LLAVE_CIERRE:
                case CORCHETE_APERTURA:
                case CORCHETE_CIERRE:
                case COMA:
                case PUNTO_COMA:
                case DOS_PUNTOS:
                    this.comboOtros1.addItem(token.getLexema());
                    break;
                case CADENA:
                    this.comboCadenas.addItem(token.getLexema());
                    break;
                case OPERADOR_LOGICO_Y:
                case OPERADOR_LOGICO_O:
                case OPERADOR_LOGICO_NEGACION:
                    this.comboLogicos.addItem(token.getLexema());
                    break;
                case COMENTARIO:
                    this.comboComentarios.addItem(token.getLexema());
                    break;
                case BOOLEANA_TRUE:
                case BOOLEANA_FALSE:
                    this.comboBooleanas.addItem(token.getLexema());
                    break;
                default:
                    this.comboClaves.addItem(token.getLexema());
                    break;
            }
        }
    }

    public void combiarColor() throws BadLocationException {

        AnalizadorLexico analizadorlexico = new AnalizadorLexico(entrada.getText());
        List<Token> tokens = analizadorlexico.analizarCodigoFuente();

        StyledDocument doc = entrada1.getStyledDocument();

        SimpleAttributeSet blackStyle = new SimpleAttributeSet();
        StyleConstants.setForeground(blackStyle, Color.WHITE);

        SimpleAttributeSet blueStyle = new SimpleAttributeSet();
        StyleConstants.setForeground(blueStyle, Color.BLUE);

        SimpleAttributeSet magentaStyle = new SimpleAttributeSet();
        StyleConstants.setForeground(magentaStyle, Color.MAGENTA);

        SimpleAttributeSet redStyle = new SimpleAttributeSet();
        StyleConstants.setForeground(redStyle, Color.RED);

        SimpleAttributeSet grayStyle = new SimpleAttributeSet();
        StyleConstants.setForeground(grayStyle, Color.GRAY);

        SimpleAttributeSet greenStyle = new SimpleAttributeSet();
        StyleConstants.setForeground(greenStyle, Color.GREEN);

        for (Token token : tokens) {
            if (token.getTipo().equals(Tipo.ARITMETICO_SUMA) || token.getTipo().equals(Tipo.ARITMETICO_RESTA) || token.getTipo().equals(Tipo.ARITMETICO_MULTIPLICACION)
                    || token.getTipo().equals(Tipo.ARITMETICO_DIVISION) || token.getTipo().equals(Tipo.ARITMETICO_EXPONENTE) || token.getTipo().equals(Tipo.ARITMETICO_MODULO)
                    || token.getTipo().equals(Tipo.COMPARACION_IGUAL) || token.getTipo().equals(Tipo.COMPARACION_DIFERENTE) || token.getTipo().equals(Tipo.COMPARACION_MAYOR_O_IGUAL_QUE)
                    || token.getTipo().equals(Tipo.COMPARACION_MAYOR_QUE) || token.getTipo().equals(Tipo.COMPARACION_MENOR_O_IGUAL_QUE) || token.getTipo().equals(Tipo.COMPARACION_MENOR_QUE)
                    || token.getTipo().equals(Tipo.ASIGNACION) || token.getTipo().equals(Tipo.ASIGNACION_IGUAL) || token.getTipo().equals(Tipo.ASIGNACION_MULTIPLICACION)
                    || token.getTipo().equals(Tipo.OPERADOR_LOGICO_Y) || token.getTipo().equals(Tipo.OPERADOR_LOGICO_O) || token.getTipo().equals(Tipo.OPERADOR_LOGICO_NEGACION)) {
                try {
                    
                    doc.insertString(token.getLexema().length(), token.getLexema(), blueStyle);
                    token.setLexema(token.getLexema());

                } catch (IllegalStateException ex) {

                }
            } else if (token.getTipo().equals(Tipo.IDENTIFICADOR)) {
                try {

                    doc.insertString(token.getLexema().length(), token.getLexema(), blackStyle);
                    token.setLexema(token.getLexema());
                } catch (IllegalStateException ex) {

                }
            } else if (token.getTipo().equals(Tipo.CONSTANTE_ENTERA) || token.getTipo().equals(Tipo.CONSTANTE_DECIMAL) || token.getTipo().equals(Tipo.CADENA)
                    || token.getTipo().equals(Tipo.BOOLEANA_TRUE) || token.getTipo().equals(Tipo.BOOLEANA_FALSE)) {
                try {

                    doc.insertString(token.getLexema().length(), token.getLexema(), redStyle);
                    token.setLexema(token.getLexema());
                } catch (IllegalStateException ex) {

                }
            } else if (token.getTipo().equals(Tipo.COMENTARIO)) {
                try {
                    
                    doc.insertString(token.getLexema().length(), token.getLexema(), grayStyle);
                    token.setLexema(token.getLexema());             
                } catch (IllegalStateException ex) {

                }

            } else if (token.getTipo().equals(Tipo.PARENTESI_APERTURA) || token.getTipo().equals(Tipo.PARENTESI_CIERRE) || token.getTipo().equals(Tipo.LLAVE_APERTURA)
                    || token.getTipo().equals(Tipo.LLAVE_CIERRE) || token.getTipo().equals(Tipo.CORCHETE_APERTURA) || token.getTipo().equals(Tipo.CORCHETE_CIERRE)
                    || token.getTipo().equals(Tipo.COMA) || token.getTipo().equals(Tipo.PUNTO_COMA) || token.getTipo().equals(Tipo.DOS_PUNTOS)) {
                try {

                    doc.insertString(token.getLexema().length(), token.getLexema(), greenStyle);
                    token.setLexema(token.getLexema());
                } catch (IllegalStateException ex) {

                }
            } else if (token.getTipo().equals(Tipo.ERROR)) {

            } else {
                try {

                    doc.insertString(token.getLexema().length(), token.getLexema(), magentaStyle);
                    token.setLexema(token.getLexema());
                } catch (IllegalStateException ex) {

                }
            }
        }
        
       
        
    }

    public String leerArchivo() {
        PalabrasReservadas pr = new PalabrasReservadas();
        String txt = "";
        JFileChooser fileCh = new JFileChooser();
        int respuesta = fileCh.showOpenDialog(this);
        if (respuesta == 0) {
            txt = cargaArchivo(fileCh.getSelectedFile().getAbsolutePath());
            for (int i = 0; i < txt.length(); i++) {

                this.entrada.setText(txt);

            }
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo cargar correctamente el archivo");
        }
        return txt;
    }

    public String cargaArchivo(String path) {
        String contenido = "";
        try {
            JFileChooser fileCh = new JFileChooser();
            BufferedReader lector = new BufferedReader(new FileReader(path));
            StringBuilder cadena = new StringBuilder();
            String line = null;

            while ((line = lector.readLine()) != null) {
                cadena.append(line + "\n");

            }
            lector.close();
            contenido = cadena.toString();

        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return contenido;
    }

    public void leerErrores() {

        AnalizadorLexico analizadorlexico = new AnalizadorLexico(entrada.getText());
        List<Token> tokens = analizadorlexico.analizarCodigoFuente();
        ArrayList<Token> tokensSinError = new ArrayList<>();
        for (Token token : tokens) {
            if (token.getTipo().equals(Tipo.ERROR)) {
                salidaErrores.setText(salidaErrores.getText() + "\n" + token.toString());
            } else {
                tokensSinError.add(token);
            }
        }
        llenarTabla(tokensSinError, this.tablaTokens);

    }

    public void llenarTabla(ArrayList<Token> tokens, JTable tablaLLenar) {
        DefaultTableModel tabla = new DefaultTableModel();
        String[] fila = new String[5];

        tabla.addColumn("Token");
        tabla.addColumn("Patron");
        tabla.addColumn("Lexema");
        tabla.addColumn("linea");
        tabla.addColumn("Columna");

        for (Token token : tokens) {
            fila[0] = token.getTipo().toString();
            fila[2] = token.getLexema();
            switch (token.getTipo()) {
                case IDENTIFICADOR:
                    fila[1] = "(_([0-9]|_|[a-z][A-Z])*)|([a-z][A-Z]+([0-9]|_|[a-z][A-Z])*)";
                    break;
                case COMENTARIO:
                    fila[1] = "([#]([0-9]|_|[a-z][A-Z])*)|([a-z][A-Z]+([0-9]|_|[a-z][A-Z])*)";
                    break;
                case CADENA:
                    fila[1] = "(([\"]|[\']([0-9]|_|[a-z][A-Z])*)|([a-z][A-Z]+([0-9]|_|[a-z][A-Z])*)[\"]|[\'])";
                    break;
                default:
                    fila[1] = token.getLexema();
                    break;
            }
            fila[3] = String.valueOf(token.getLinea());
            fila[4] = String.valueOf(token.getColumna());
            tabla.addRow(fila);
        }

        tablaLLenar.setModel(tabla);

    }

    public void mostrarAyuda() {
        Ayuda1 ayuda = new Ayuda1(this);
        ayuda.setLocationRelativeTo(this);
        ayuda.setVisible(true);

    }

    public void acercaDe() {
        AcercaDe acercaDe = new AcercaDe();
        acercaDe.setLocationRelativeTo(this);
        acercaDe.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAnalizarEntrada;
    private javax.swing.JButton botonCargaDatos;
    private javax.swing.JTabbedPane botonGenerarGrafico;
    private javax.swing.JComboBox<String> comboBooleanas;
    private javax.swing.JComboBox<String> comboCadenas;
    private javax.swing.JComboBox<String> comboClaves;
    private javax.swing.JComboBox<String> comboComentarios;
    private javax.swing.JComboBox<String> comboIdS;
    private javax.swing.JComboBox<String> comboLogicos;
    private javax.swing.JComboBox<String> comboNumeros;
    private javax.swing.JComboBox<String> comboOtros1;
    private javax.swing.JComboBox<String> comboSMatems;
    private javax.swing.JTextPane entrada;
    private javax.swing.JTextPane entrada1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel label;
    private javax.swing.JTextArea salidaErrores;
    private javax.swing.JTable tablaTokens;
    // End of variables declaration//GEN-END:variables
}
